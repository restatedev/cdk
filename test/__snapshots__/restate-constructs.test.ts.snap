// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Restate constructs [Experimental] Create a self-hosted Restate environment deployed on ECS Fargate 1`] = `
"Resources:
  ZoneA5DE4B68:
    Type: 'AWS::Route53::HostedZone'
    Properties:
      Name: example.com.
  RestateContainerDataStore2CD55CF9:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      Encrypted: true
      FileSystemPolicy:
        Statement:
          - Action: 'elasticfilesystem:ClientMount'
            Condition:
              Bool:
                'elasticfilesystem:AccessedViaMountTarget': 'true'
            Effect: Allow
            Principal:
              AWS: '*'
            Sid: AllowEfsMount
          - Action:
              - 'elasticfilesystem:ClientWrite'
              - 'elasticfilesystem:ClientRootAccess'
            Condition:
              Bool:
                'elasticfilesystem:AccessedViaMountTarget': 'true'
            Effect: Allow
            Principal:
              AWS: '*'
        Version: '2012-10-17'
      FileSystemTags:
        - Key: Name
          Value: RestateOnFargateStack/RestateContainer/DataStore
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RestateContainerDataStoreEfsSecurityGroupF3B38961:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RestateOnFargateStack/RestateContainer/DataStore/EfsSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      Tags:
        - Key: Name
          Value: RestateOnFargateStack/RestateContainer/DataStore
      VpcId: vpc-12345
  RestateContainerDataStoreEfsSecurityGroupfromRestateOnFargateStackRestateContainerSecurityGroup7DD2FD092049D9445952:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: 'from RestateOnFargateStackRestateContainerSecurityGroup7DD2FD09:2049'
      FromPort: 2049
      GroupId:
        'Fn::GetAtt':
          - RestateContainerDataStoreEfsSecurityGroupF3B38961
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      ToPort: 2049
  RestateContainerDataStoreEfsMountTarget14DA83FA9:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId:
        Ref: RestateContainerDataStore2CD55CF9
      SecurityGroups:
        - 'Fn::GetAtt':
            - RestateContainerDataStoreEfsSecurityGroupF3B38961
            - GroupId
      SubnetId: p-12345
  RestateContainerDataStoreEfsMountTarget293F01D03:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId:
        Ref: RestateContainerDataStore2CD55CF9
      SecurityGroups:
        - 'Fn::GetAtt':
            - RestateContainerDataStoreEfsSecurityGroupF3B38961
            - GroupId
      SubnetId: p-67890
  RestateContainerCluster8240BE00:
    Type: 'AWS::ECS::Cluster'
  RestateContainerRestateTaskTaskRole8631C1EC:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
  RestateContainerRestateTaskTaskRoleDefaultPolicy48E28208:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Resource:
              'Fn::GetAtt':
                - RestateContainerInvokerRoleEFCDC05B
                - Arn
          - Action:
              - 'elasticfilesystem:ClientMount'
              - 'elasticfilesystem:ClientWrite'
              - 'elasticfilesystem:ClientRootAccess'
            Condition:
              Bool:
                'elasticfilesystem:AccessedViaMountTarget': 'true'
            Effect: Allow
            Resource:
              'Fn::GetAtt':
                - RestateContainerDataStore2CD55CF9
                - Arn
        Version: '2012-10-17'
      PolicyName: RestateContainerRestateTaskTaskRoleDefaultPolicy48E28208
      Roles:
        - Ref: RestateContainerRestateTaskTaskRole8631C1EC
  RestateContainerRestateTaskB2410338:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Environment:
            - Name: RESTATE_OBSERVABILITY__LOG__FORMAT
              Value: Json
          Essential: true
          Image: Any<Object>
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RestateContainerLogs4399E84C
              awslogs-stream-prefix: restate
              awslogs-region: region
          MountPoints:
            - ContainerPath: /target
              ReadOnly: false
              SourceVolume: restateStore
          Name: restate-runtime
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
            - ContainerPort: 9070
              Protocol: tcp
          StartTimeout: 20
          StopTimeout: 20
      Cpu: '4096'
      ExecutionRoleArn:
        'Fn::GetAtt':
          - RestateContainerRestateTaskExecutionRole10CF0851
          - Arn
      Family: RestateOnFargateStackRestateContainerRestateTaskBB43DAFB
      Memory: '8192'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
        OperatingSystemFamily: LINUX
      TaskRoleArn:
        'Fn::GetAtt':
          - RestateContainerRestateTaskTaskRole8631C1EC
          - Arn
      Volumes:
        - EFSVolumeConfiguration:
            AuthorizationConfig: {}
            FilesystemId:
              Ref: RestateContainerDataStore2CD55CF9
          Name: restateStore
  RestateContainerRestateTaskExecutionRole10CF0851:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: '2012-10-17'
  RestateContainerRestateTaskExecutionRoleDefaultPolicyFDEA8435:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource:
              'Fn::GetAtt':
                - RestateContainerLogs4399E84C
                - Arn
        Version: '2012-10-17'
      PolicyName: RestateContainerRestateTaskExecutionRoleDefaultPolicyFDEA8435
      Roles:
        - Ref: RestateContainerRestateTaskExecutionRole10CF0851
  RestateContainerTaskPolicyC2BA310D:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Resource: '*'
            Sid: AllowAssumeAnyRole
        Version: '2012-10-17'
      PolicyName: RestateContainerTaskPolicyC2BA310D
      Roles:
        - Ref: RestateContainerRestateTaskTaskRole8631C1EC
  RestateContainerInvokerRoleEFCDC05B:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS:
                'Fn::GetAtt':
                  - RestateContainerRestateTaskTaskRole8631C1EC
                  - Arn
        Version: '2012-10-17'
      Description: Assumed by Restate deployment to invoke Lambda-based services
  RestateContainerLogs4399E84C:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: /restate/RestateContainer
      RetentionInDays: 30
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RestateContainerSecurityGroup6BE91975:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RestateOnFargateStack/RestateContainer/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId: vpc-12345
  RestateContainerSecurityGroupfromRestateOnFargateStackRestateContainerDataStoreEfsSecurityGroup93B5B80320493195848B:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: >-
        from
        RestateOnFargateStackRestateContainerDataStoreEfsSecurityGroup93B5B803:2049
      FromPort: 2049
      GroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerDataStoreEfsSecurityGroupF3B38961
          - GroupId
      ToPort: 2049
  RestateContainerSecurityGroupfromRestateOnFargateStackRestateContainerAlbSecurityGroup84369A89808040114BB3:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: Load balancer to target
      FromPort: 8080
      GroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerAlbSecurityGroup86380461
          - GroupId
      ToPort: 8080
  RestateContainerSecurityGroupfromRestateOnFargateStackRestateContainerAlbSecurityGroup84369A899070981DBFA5:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      Description: Load balancer to target
      FromPort: 9070
      GroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      IpProtocol: tcp
      SourceSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerAlbSecurityGroup86380461
          - GroupId
      ToPort: 9070
  RestateContainerService4B07AFB0:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster:
        Ref: RestateContainerCluster8240BE00
      DeploymentConfiguration:
        Alarms:
          AlarmNames: []
          Enable: false
          Rollback: false
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 100
        MinimumHealthyPercent: 0
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: restate-runtime
          ContainerPort: 8080
          TargetGroupArn:
            Ref: >-
              RestateContainerAlbIngressListenerFargateIngressTargetGroup38EB7B83
        - ContainerName: restate-runtime
          ContainerPort: 9070
          TargetGroupArn:
            Ref: RestateContainerAlbAdminListenerFargateAdminTargetGroup139F200C
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - 'Fn::GetAtt':
                - RestateContainerSecurityGroup6BE91975
                - GroupId
          Subnets:
            - s-12345
            - s-67890
      TaskDefinition:
        Ref: RestateContainerRestateTaskB2410338
    DependsOn:
      - RestateContainerAlbAdminListenerFargateAdminTargetGroup139F200C
      - RestateContainerAlbAdminListenerFF3856A3
      - RestateContainerAlbIngressListenerFargateIngressTargetGroup38EB7B83
      - RestateContainerAlbIngressListener09867A46
      - RestateContainerRestateTaskTaskRoleDefaultPolicy48E28208
      - RestateContainerRestateTaskTaskRole8631C1EC
  RestateContainerAlbC83EF273:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: 'false'
      Scheme: internal
      SecurityGroups:
        - 'Fn::GetAtt':
            - RestateContainerAlbSecurityGroup86380461
            - GroupId
      Subnets:
        - p-12345
        - p-67890
      Type: application
  RestateContainerAlbSecurityGroup86380461:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Automatically created Security Group for ELB
        RestateOnFargateStackRestateContainerAlbEE60ACC3
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 443
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 9070
          FromPort: 9070
          IpProtocol: tcp
          ToPort: 9070
      VpcId: vpc-12345
  RestateContainerAlbSecurityGrouptoRestateOnFargateStackRestateContainerSecurityGroup7DD2FD098080B5F4540C:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: Load balancer to target
      DestinationSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      FromPort: 8080
      GroupId:
        'Fn::GetAtt':
          - RestateContainerAlbSecurityGroup86380461
          - GroupId
      IpProtocol: tcp
      ToPort: 8080
  RestateContainerAlbSecurityGrouptoRestateOnFargateStackRestateContainerSecurityGroup7DD2FD09907051D68255:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      Description: Load balancer to target
      DestinationSecurityGroupId:
        'Fn::GetAtt':
          - RestateContainerSecurityGroup6BE91975
          - GroupId
      FromPort: 9070
      GroupId:
        'Fn::GetAtt':
          - RestateContainerAlbSecurityGroup86380461
          - GroupId
      IpProtocol: tcp
      ToPort: 9070
  RestateContainerAlbIngressListener09867A46:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn:
            Ref: RestateContainerCertificate65E4F360
      DefaultActions:
        - TargetGroupArn:
            Ref: >-
              RestateContainerAlbIngressListenerFargateIngressTargetGroup38EB7B83
          Type: forward
      LoadBalancerArn:
        Ref: RestateContainerAlbC83EF273
      Port: 443
      Protocol: HTTPS
  RestateContainerAlbIngressListenerFargateIngressTargetGroup38EB7B83:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /grpc.health.v1.Health/Check
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '5'
        - Key: stickiness.enabled
          Value: 'false'
      TargetType: ip
      UnhealthyThresholdCount: 3
      VpcId: vpc-12345
  RestateContainerAlbAdminListenerFF3856A3:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      Certificates:
        - CertificateArn:
            Ref: RestateContainerCertificate65E4F360
      DefaultActions:
        - TargetGroupArn:
            Ref: RestateContainerAlbAdminListenerFargateAdminTargetGroup139F200C
          Type: forward
      LoadBalancerArn:
        Ref: RestateContainerAlbC83EF273
      Port: 9070
      Protocol: HTTPS
  RestateContainerAlbAdminListenerFargateAdminTargetGroup139F200C:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 5
      HealthCheckPath: /health
      HealthCheckTimeoutSeconds: 2
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '5'
        - Key: stickiness.enabled
          Value: 'false'
      TargetType: ip
      UnhealthyThresholdCount: 3
      VpcId: vpc-12345
  RestateContainerCertificate65E4F360:
    Type: 'AWS::CertificateManager::Certificate'
    Properties:
      DomainName: restate.example.com
      DomainValidationOptions:
        - DomainName: restate.example.com
          HostedZoneId:
            Ref: ZoneA5DE4B68
      Tags:
        - Key: Name
          Value: RestateOnFargateStack/RestateContainer/Certificate
      ValidationMethod: DNS
  RestateContainerAlbAliasF68387BC:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      AliasTarget:
        DNSName:
          'Fn::Join':
            - ''
            - - dualstack.
              - 'Fn::GetAtt':
                  - RestateContainerAlbC83EF273
                  - DNSName
        HostedZoneId:
          'Fn::GetAtt':
            - RestateContainerAlbC83EF273
            - CanonicalHostedZoneID
      HostedZoneId:
        Ref: ZoneA5DE4B68
      Name: restate.example.com.
      Type: A
"
`;

exports[`Restate constructs Create a self-hosted Restate environment deployed on EC2 1`] = `
"Resources:
  RestateInstanceRoleACC59A6F:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/AmazonSSMManagedInstanceCore'
  RestateInstanceRoleDefaultPolicyD1D39538:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
            Effect: Allow
            Resource:
              'Fn::GetAtt':
                - RestateLogsFD86ECAE
                - Arn
        Version: '2012-10-17'
      PolicyName: RestateInstanceRoleDefaultPolicyD1D39538
      Roles:
        - Ref: RestateInstanceRoleACC59A6F
  RestateInvokerRole42565598:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS:
                'Fn::GetAtt':
                  - RestateInstanceRoleACC59A6F
                  - Arn
        Version: '2012-10-17'
  RestateAssumeInvokerRolePolicy1FA6B6C2:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Resource:
              'Fn::GetAtt':
                - RestateInvokerRole42565598
                - Arn
            Sid: AllowAssumeInvokerRole
        Version: '2012-10-17'
      PolicyName: RestateAssumeInvokerRolePolicy1FA6B6C2
      Roles:
        - Ref: RestateInstanceRoleACC59A6F
  RestateLogsFD86ECAE:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: /restate/Restate
      RetentionInDays: 30
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RestateHostInstanceSecurityGroup471D630B:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: RestateSelfHostedServerEc2Stack/Restate/Host/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      Tags:
        - Key: Name
          Value: RestateSelfHostedServerEc2Stack/Restate/Host
      VpcId: vpc-12345
  RestateHostInstanceProfile14AE3AC8:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
        - Ref: RestateInstanceRoleACC59A6F
  RestateHost1AC4F9D1:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: dummy1a
      BlockDeviceMappings:
        - DeviceName: /dev/sdd
          Ebs:
            DeleteOnTermination: false
            VolumeSize: 8
          VirtualName: restate-data
      IamInstanceProfile:
        Ref: RestateHostInstanceProfile14AE3AC8
      ImageId:
        Ref: >-
          SsmParameterValueawsserviceamiamazonlinuxlatestal2023amikernel61arm64C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t4g.micro
      SecurityGroupIds:
        - 'Fn::GetAtt':
            - RestateHostInstanceSecurityGroup471D630B
            - GroupId
        - 'Fn::GetAtt':
            - RestateRestateSecurityGroup73273B13
            - GroupId
      SubnetId: s-12345
      Tags:
        - Key: Name
          Value: RestateSelfHostedServerEc2Stack/Restate/Host
      UserData:
        'Fn::Base64':
          'Fn::Join':
            - ''
            - - >+
                Content-Type: multipart/mixed;
                boundary="+AWS+CDK+User+Data+Separator=="

                MIME-Version: 1.0


                --+AWS+CDK+User+Data+Separator==

                Content-Type: text/cloud-config

                Content-Transfer-Encoding: base64

              - 'Fn::Base64': |-
                  cloud_final_modules:
                  - [scripts-user, always]
              - |+

                --+AWS+CDK+User+Data+Separator==
                Content-Type: text/x-shellscript
                Content-Transfer-Encoding: base64

              - 'Fn::Base64':
                  'Fn::Join':
                    - ''
                    - - >-
                        #!/bin/bash

                        set -euf -o pipefail

                        yum install -y docker nginx


                        if mount | grep -qs '/var/restate'; then
                          echo "/var/restate is mounted"
                        else
                          if [ -d /var/restate ]; then
                            if [ "$(ls -A /var/restate)" ]; then
                              echo "Data exists in /var/restate that is not on data volume; refusing to overwrite!"
                              exit 1
                            fi
                          else
                            mkdir /var/restate
                          fi
                          if file -sL /dev/sdd | grep -q ': data$'; then
                            mkfs -t xfs /dev/sdd
                          fi
                          mount /dev/sdd /var/restate
                          if ! grep -qs '/var/restate' /etc/fstab; then
                            echo "/dev/sdd /var/restate xfs defaults 0 0" >> /etc/fstab
                            echo "Added entry for /dev/sdd to /etc/fstab"
                          else
                            echo "Entry for /dev/sdd already exists in /etc/fstab"
                          fi
                        fi


                        mkdir /etc/restate

                        cat << EOF > /etc/restate/config.toml

                        roles = [
                            "worker",
                            "admin",
                            "metadata-store",
                        ]

                        node-name = "restate-0"

                        cluster-name = "localcluster"

                        allow-bootstrap = true

                        bootstrap-num-partitions = 4

                        default-thread-pool-size = 3

                        storage-high-priority-bg-threads = 3

                        storage-low-priority-bg-threads = 3

                        rocksdb-total-memory-size = "512.0 MB"

                        rocksdb-total-memtables-ratio = 0.6000000238418579

                        rocksdb-bg-threads = 3

                        rocksdb-high-priority-bg-threads = 3


                        [worker]

                        internal-queue-length = 1000


                        [worker.storage]

                        rocksdb-max-background-jobs = 3

                        rocksdb-statistics-level = "except-detailed-timers"

                        num-partitions-to-share-memory-budget = 4


                        [admin.query-engine]

                        memory-size = "50.0 MB"

                        query-parallelism = 4


                        [ingress]

                        rocksdb-max-background-jobs = 3

                        rocksdb-statistics-level = "except-detailed-timers"

                        writer-batch-commit-count = 1000


                        [metadata-store.rocksdb]

                        rocksdb-max-background-jobs = 1

                        rocksdb-statistics-level = "except-detailed-timers"

                        EOF

                        systemctl start docker.service

                        docker run --name adot --restart on-failure --detach -p
                        4317:4317 -p 55680:55680 -p 8889:8888
                        public.ecr.aws/aws-observability/aws-otel-collector:latest

                        docker run --name restate --restart on-failure --detach
                        --volume /etc/restate:/etc/restate --volume
                        /var/restate:/restate-data --network=host -e
                        RESTATE_OBSERVABILITY__LOG__FORMAT=Json -e
                        RUST_LOG=info,restate_worker::partition=warn -e
                        RESTATE_OBSERVABILITY__TRACING__ENDPOINT=http://localhost:4317
                        --log-driver=awslogs --log-opt awslogs-group=
                      - Ref: RestateLogsFD86ECAE
                      - >2-
                         docker.io/restatedev/restate:latest --config-file /etc/restate/config.toml
                        mkdir -p /etc/pki/private

                        openssl req -new -x509 -nodes -sha256 -days 365
                        -extensions v3_ca -subj
                        '/C=DE/ST=Berlin/L=Berlin/O=restate.dev/OU=demo/CN=restate.example.com'
                        -newkey rsa:2048 -keyout
                        /etc/pki/private/restate-selfsigned.key -out
                        /etc/pki/private/restate-selfsigned.crt

                        cat << EOF > /etc/nginx/conf.d/restate-ingress.conf

                        server {
                          listen 443 ssl http2;
                          listen [::]:443 ssl http2;
                          server_name _;
                          root /usr/share/nginx/html;

                          ssl_certificate "/etc/pki/private/restate-selfsigned.crt";
                          ssl_certificate_key "/etc/pki/private/restate-selfsigned.key";
                          ssl_session_cache shared:SSL:1m;
                          ssl_session_timeout 10m;
                          ssl_ciphers PROFILE=SYSTEM;
                          ssl_prefer_server_ciphers on;

                          location / {
                            proxy_pass http://localhost:8080;
                            proxy_read_timeout 3600;
                          }
                        }


                        server {
                          listen 9073 ssl http2;
                          listen [::]:9073 ssl http2;
                          server_name _;
                          root /usr/share/nginx/html;

                          ssl_certificate "/etc/pki/private/restate-selfsigned.crt";
                          ssl_certificate_key "/etc/pki/private/restate-selfsigned.key";
                          ssl_session_cache shared:SSL:1m;
                          ssl_session_timeout 10m;
                          ssl_ciphers PROFILE=SYSTEM;
                          ssl_prefer_server_ciphers on;

                          location / {
                            proxy_pass http://localhost:9070;
                          }
                        }

                        EOF

                        systemctl start nginx
              - |

                --+AWS+CDK+User+Data+Separator==--
    DependsOn:
      - RestateInstanceRoleDefaultPolicyD1D39538
      - RestateInstanceRoleACC59A6F
  RestateRestateSecurityGroup73273B13:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Restate service ACLs
      GroupName: RestateSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow traffic from anywhere to Restate ingress port
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
        - CidrIp: 0.0.0.0/0
          Description: Allow traffic from anywhere to Restate admin port
          FromPort: 9073
          IpProtocol: tcp
          ToPort: 9073
      VpcId: vpc-12345
Parameters: Any<Object>
"
`;

exports[`Restate constructs Deploy a Lambda service handler to Restate Cloud environment 1`] = `
"Resources:
  RestateInvokerRole42565598:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                'sts:ExternalId': env_test
                'aws:PrincipalArn': 'arn:aws:iam::654654156625:role/RestateCloud'
            Effect: Allow
            Principal:
              AWS:
                'Fn::Join':
                  - ''
                  - - 'arn:'
                    - Ref: 'AWS::Partition'
                    - ':iam::654654156625:root'
          - Action: 'sts:TagSession'
            Effect: Allow
            Principal:
              AWS:
                'Fn::Join':
                  - ''
                  - - 'arn:'
                    - Ref: 'AWS::Partition'
                    - ':iam::654654156625:root'
        Version: '2012-10-17'
  RestateServiceHandlerServiceRole07B26D05:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  RestateServiceHandler71409CD7:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code: Any<Object>
      Handler: index.handler
      Role:
        'Fn::GetAtt':
          - RestateServiceHandlerServiceRole07B26D05
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - RestateServiceHandlerServiceRole07B26D05
  RestateServiceHandlerCurrentVersion40030E671fc2ba09c2d7b4ea8c6a3f8fee895a65:
    Type: 'AWS::Lambda::Version'
    Properties:
      FunctionName:
        Ref: RestateServiceHandler71409CD7
  RestateServiceHandlerCurrentVersionRestateDeploymentE8F102EB:
    Type: 'Custom::RestateServiceDeployment'
    Properties:
      ServiceToken:
        'Fn::GetAtt':
          - ServiceDeployerCustomResourceProviderframeworkonEvent528FE6C2
          - Arn
      servicePath: Service
      adminUrl: 'https://test.env.us.restate.cloud:9070'
      authTokenSecretArn:
        'Fn::Join':
          - ''
          - - 'arn:'
            - Ref: 'AWS::Partition'
            - ':secretsmanager:region:account-id:secret:secret_name'
      serviceLambdaArn:
        Ref: >-
          RestateServiceHandlerCurrentVersion40030E671fc2ba09c2d7b4ea8c6a3f8fee895a65
      invokeRoleArn:
        'Fn::GetAtt':
          - RestateInvokerRole42565598
          - Arn
      removalPolicy: retain
      private: 'false'
      insecure: 'false'
    DependsOn:
      - ServiceDeployerInvocationPolicyD09B639D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ServiceDeployerEventHandlerServiceRoleF133584F:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'secretsmanager:GetSecretValue'
              - 'secretsmanager:DescribeSecret'
            Effect: Allow
            Resource:
              'Fn::Join':
                - ''
                - - 'arn:'
                  - Ref: 'AWS::Partition'
                  - ':secretsmanager:region:account-id:secret:secret_name-??????'
        Version: '2012-10-17'
      PolicyName: ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9
      Roles:
        - Ref: ServiceDeployerEventHandlerServiceRoleF133584F
  ServiceDeployerEventHandler89EAD25F:
    Type: 'AWS::Lambda::Function'
    Properties:
      Architectures:
        - arm64
      Code: Any<Object>
      Description: Restate custom registration handler
      Environment:
        Variables:
          NODE_OPTIONS: '--enable-source-maps'
      Handler: index.handler
      MemorySize: 128
      Role:
        'Fn::GetAtt':
          - ServiceDeployerEventHandlerServiceRoleF133584F
          - Arn
      Runtime: nodejs18.x
      Timeout: 180
    DependsOn:
      - ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9
      - ServiceDeployerEventHandlerServiceRoleF133584F
  ServiceDeployerDeploymentLogs5B8BE5D2:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: ServiceDeployerEventHandler89EAD25F
      RetentionInDays: 30
    UpdateReplacePolicy: Retain
    DeletionPolicy: RetainExceptOnCreate
  ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - ServiceDeployerEventHandler89EAD25F
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - ServiceDeployerEventHandler89EAD25F
                        - Arn
                    - ':*'
        Version: '2012-10-17'
      PolicyName: >-
        ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9
      Roles:
        - Ref: >-
            ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
  ServiceDeployerCustomResourceProviderframeworkonEvent528FE6C2:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code: Any<Object>
      Description: >-
        AWS CDK resource provider framework - onEvent
        (RestateCloudStack/ServiceDeployer/CustomResourceProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            'Fn::GetAtt':
              - ServiceDeployerEventHandler89EAD25F
              - Arn
      Handler: framework.onEvent
      Role:
        'Fn::GetAtt':
          - >-
            ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
          - Arn
      Runtime: nodejs18.x
      Timeout: 900
    DependsOn:
      - >-
        ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9
      - ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
  ServiceDeployerInvocationPolicyD09B639D:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - RestateServiceHandler71409CD7
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - RestateServiceHandler71409CD7
                        - Arn
                    - ':*'
        Version: '2012-10-17'
      PolicyName: ServiceDeployerInvocationPolicyD09B639D
      Roles:
        - Ref: RestateInvokerRole42565598
"
`;

exports[`Restate constructs Deploy a Lambda service handler to existing Restate environment 1`] = `
"Resources:
  InvokerRole4DB2757E:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              AWS:
                'Fn::Join':
                  - ''
                  - - 'arn:'
                    - Ref: 'AWS::Partition'
                    - ':iam::'
                    - Ref: 'AWS::AccountId'
                    - ':root'
        Version: '2012-10-17'
  InvokerRoleDefaultPolicy713FD858:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - RestateServiceHandler71409CD7
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - RestateServiceHandler71409CD7
                        - Arn
                    - ':*'
        Version: '2012-10-17'
      PolicyName: InvokerRoleDefaultPolicy713FD858
      Roles:
        - Ref: InvokerRole4DB2757E
  RestateApiKey6463672F:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      SecretString: api-key-raw
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  RestateServiceHandlerServiceRole07B26D05:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  RestateServiceHandler71409CD7:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code: Any<Object>
      Handler: index.handler
      Role:
        'Fn::GetAtt':
          - RestateServiceHandlerServiceRole07B26D05
          - Arn
      Runtime: nodejs18.x
    DependsOn:
      - RestateServiceHandlerServiceRole07B26D05
  RestateServiceHandlerCurrentVersion40030E671fc2ba09c2d7b4ea8c6a3f8fee895a65:
    Type: 'AWS::Lambda::Version'
    Properties:
      FunctionName:
        Ref: RestateServiceHandler71409CD7
  RestateServiceHandlerCurrentVersionRestateDeploymentE8F102EB:
    Type: 'Custom::RestateServiceDeployment'
    Properties:
      ServiceToken:
        'Fn::GetAtt':
          - ServiceDeployerCustomResourceProviderframeworkonEvent528FE6C2
          - Arn
      servicePath: Service
      adminUrl: 'https://restate.example.com:9070'
      authTokenSecretArn:
        Ref: RestateApiKey6463672F
      serviceLambdaArn:
        Ref: >-
          RestateServiceHandlerCurrentVersion40030E671fc2ba09c2d7b4ea8c6a3f8fee895a65
      invokeRoleArn:
        'Fn::GetAtt':
          - InvokerRole4DB2757E
          - Arn
      removalPolicy: retain
      private: 'false'
      insecure: 'false'
    DependsOn:
      - ServiceDeployerInvocationPolicyD09B639D
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  ServiceDeployerEventHandlerServiceRoleF133584F:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'secretsmanager:GetSecretValue'
              - 'secretsmanager:DescribeSecret'
            Effect: Allow
            Resource:
              Ref: RestateApiKey6463672F
        Version: '2012-10-17'
      PolicyName: ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9
      Roles:
        - Ref: ServiceDeployerEventHandlerServiceRoleF133584F
  ServiceDeployerEventHandler89EAD25F:
    Type: 'AWS::Lambda::Function'
    Properties:
      Architectures:
        - arm64
      Code: Any<Object>
      Description: Restate custom registration handler
      Environment:
        Variables:
          NODE_OPTIONS: '--enable-source-maps'
      Handler: index.handler
      MemorySize: 128
      Role:
        'Fn::GetAtt':
          - ServiceDeployerEventHandlerServiceRoleF133584F
          - Arn
      Runtime: nodejs18.x
      Timeout: 180
    DependsOn:
      - ServiceDeployerEventHandlerServiceRoleDefaultPolicyFE2DC3C9
      - ServiceDeployerEventHandlerServiceRoleF133584F
  ServiceDeployerDeploymentLogs5B8BE5D2:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName:
        'Fn::Join':
          - ''
          - - /aws/lambda/
            - Ref: ServiceDeployerEventHandler89EAD25F
      RetentionInDays: 30
    UpdateReplacePolicy: Retain
    DeletionPolicy: RetainExceptOnCreate
  ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - 'Fn::Join':
            - ''
            - - 'arn:'
              - Ref: 'AWS::Partition'
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
  ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - ServiceDeployerEventHandler89EAD25F
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - ServiceDeployerEventHandler89EAD25F
                        - Arn
                    - ':*'
        Version: '2012-10-17'
      PolicyName: >-
        ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9
      Roles:
        - Ref: >-
            ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
  ServiceDeployerCustomResourceProviderframeworkonEvent528FE6C2:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code: Any<Object>
      Description: >-
        AWS CDK resource provider framework - onEvent
        (LambdaServiceDeployment/ServiceDeployer/CustomResourceProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            'Fn::GetAtt':
              - ServiceDeployerEventHandler89EAD25F
              - Arn
      Handler: framework.onEvent
      Role:
        'Fn::GetAtt':
          - >-
            ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
          - Arn
      Runtime:
        'Fn::FindInMap':
          - LatestNodeRuntimeMap
          - Ref: 'AWS::Region'
          - value
      Timeout: 900
    DependsOn:
      - >-
        ServiceDeployerCustomResourceProviderframeworkonEventServiceRoleDefaultPolicy740A65C9
      - ServiceDeployerCustomResourceProviderframeworkonEventServiceRole865AFB0C
  ServiceDeployerInvocationPolicyD09B639D:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyDocument:
        Statement:
          - Action: 'lambda:InvokeFunction'
            Effect: Allow
            Resource:
              - 'Fn::GetAtt':
                  - RestateServiceHandler71409CD7
                  - Arn
              - 'Fn::Join':
                  - ''
                  - - 'Fn::GetAtt':
                        - RestateServiceHandler71409CD7
                        - Arn
                    - ':*'
        Version: '2012-10-17'
      PolicyName: ServiceDeployerInvocationPolicyD09B639D
      Roles:
        - Ref: InvokerRole4DB2757E
Mappings:
  LatestNodeRuntimeMap:
    af-south-1:
      value: nodejs20.x
    ap-east-1:
      value: nodejs20.x
    ap-northeast-1:
      value: nodejs20.x
    ap-northeast-2:
      value: nodejs20.x
    ap-northeast-3:
      value: nodejs20.x
    ap-south-1:
      value: nodejs20.x
    ap-south-2:
      value: nodejs20.x
    ap-southeast-1:
      value: nodejs20.x
    ap-southeast-2:
      value: nodejs20.x
    ap-southeast-3:
      value: nodejs20.x
    ap-southeast-4:
      value: nodejs20.x
    ap-southeast-5:
      value: nodejs20.x
    ap-southeast-7:
      value: nodejs20.x
    ca-central-1:
      value: nodejs20.x
    ca-west-1:
      value: nodejs20.x
    cn-north-1:
      value: nodejs18.x
    cn-northwest-1:
      value: nodejs18.x
    eu-central-1:
      value: nodejs20.x
    eu-central-2:
      value: nodejs20.x
    eu-isoe-west-1:
      value: nodejs18.x
    eu-north-1:
      value: nodejs20.x
    eu-south-1:
      value: nodejs20.x
    eu-south-2:
      value: nodejs20.x
    eu-west-1:
      value: nodejs20.x
    eu-west-2:
      value: nodejs20.x
    eu-west-3:
      value: nodejs20.x
    il-central-1:
      value: nodejs20.x
    me-central-1:
      value: nodejs20.x
    me-south-1:
      value: nodejs20.x
    mx-central-1:
      value: nodejs20.x
    sa-east-1:
      value: nodejs20.x
    us-east-1:
      value: nodejs20.x
    us-east-2:
      value: nodejs20.x
    us-gov-east-1:
      value: nodejs18.x
    us-gov-west-1:
      value: nodejs18.x
    us-iso-east-1:
      value: nodejs18.x
    us-iso-west-1:
      value: nodejs18.x
    us-isob-east-1:
      value: nodejs18.x
    us-west-1:
      value: nodejs20.x
    us-west-2:
      value: nodejs20.x
"
`;
